syntax = "v1"

info(
    title: "订单服务"
    desc: "订单服务"
    author: "MichaelHu"
    email: "matrix-x@artisan-cloud.com"
    version: "v1"
)

import "../product/product.api"
import "./payment.api"

@server(
    group: admin/trade/order
    prefix: /api/v1/admin/trade
    middleware: EmployeeJWTAuth
)
service PowerX {
    @doc("查询订单列表")
    @handler ListOrdersPage
    get /orders/page-list (ListOrdersPageRequest) returns (ListOrdersPageReply)

    @doc("查询订单详情")
    @handler GetOrder
    get /orders/:id (GetOrderRequest) returns (GetOrderReply)

    @doc("创建订单")
    @handler CreateOrder
    post /orders (CreateOrderRequest) returns (CreateOrderReply)

    @doc("更新订单")
    @handler PutOrder
    put /orders/:id (PutOrderRequest) returns (PutOrderReply)

    @doc("部分更新订单")
    @handler PatchOrder
    patch /orders/:id (PatchOrderRequest) returns (PatchOrderReply)

    @doc("删除订单")
    @handler DeleteOrder
    delete /orders/:id (DeleteOrderRequest) returns (DeleteOrderReply)

    @doc("导出订单")
    @handler ExportOrders
    get /orders/export (ExportOrdersRequest) returns (ExportOrdersReply)
}

type OrderItem {
    Id int64 `json:"id,optional"`

    OrderId int64 `json:"orderId,optional"`
    PriceBookEntryId int64 `json:"priceBookEntryId,optional"`
    CustomerId int64 `json:"customerId,optional"`
    Type int `json:"type,optional"`
    Status int `json:"status,optional"`
    Quantity int `json:"quantity,optional"`
    UnitPrice float64 `json:"unitPrice,optional"`
    ListPrice float64 `json:"listPrice,optional"`
    SellingPrice float64 `json:"sellingPrice,optional"`
//    CoverUrl string `json:"coverUrl,optional"`
    CoverImage *MediaResource `json:"coverImage,optional"`
    ProdcutName string `json:"productName,optional"`
    SkuNo string `json:"skuNo,optional"`
}

type Order {
    Id int64 `json:"id,optional"`

    CustomerId int64 `json:"customerId,optional"`
    CartId int64 `json:"cartId,optional"`
    PaymentType int `json:"paymentType,optional"`
    Type int `json:"type,optional"`
    Status int `json:"status,optional"`
    OrderNumber string `json:"orderNumber,optional"`
    Discount float64 `json:"discount,optional"`
    ListPrice float64 `json:"listPrice,optional"`
    UnitPrice float64 `json:"unitPrice,optional"`
    Comment string `json:"comment,optional"`
    CompletedAt string `json:"completedAt,optional,omitempty"`
    CancelledAt string `json:"cancelledAt,optional,omitempty"`
    ShippingMethod string `json:"shippingMethod,optional,omitempty"`
    CreatedAt string `json:"createdAt,optional,omitempty"`
    OrderItems []*OrderItem `json:"orderItems,optional"`
    Payments []*Payment `json:"payments,optional"`
}

type (
    ListOrdersPageRequest {
        TypeIds []int `form:"typeIds,optional,omitempty"`
        StatusIds []int `form:"statusIds,optional,omitempty"`
        Name string `form:"name,optional,omitempty"`
        StartAt string `form:"startAt,optional,omitempty"`
        EndAt string `form:"endAt,optional,omitempty"`
        OrderBy string `form:"orderBy,optional,omitempty"`
        PageIndex int `form:"pageIndex,optional,omitempty"`
        PageSize int `form:"pageSize,optional,omitempty"`
    }
    ListOrdersPageReply {
        List []*Order `json:"list"`
        PageIndex int `json:"pageIndex"`
        PageSize int `json:"pageSize"`
        Total int64 `json:"total"`
    }
)
type (
    ExportOrdersRequest {
        OrderType []int `form:"orderType,optional,omitempty"`
        OrderStatus []int `form:"orderStatus,optional,omitempty"`
        OrderBy string `form:"orderBy,optional"`
        StartAt string `form:"startAt"`
        EndAt string `form:"endAt"`
    }
    ExportOrdersReply {
        Content []byte `json:"content"`
        FileName string `json:"fileName"`
        FileSize int `json:"fileSize"`
        FileType string `json:"fileType"`
    }
)



type (
    CreateOrderRequest {
        Order
    }
    CreateOrderReply {
        orderId int64 `json:"orderId,omitempty"`
    }
)

type (
    GetOrderRequest {
        orderId int64 `path:"id"`
    }

    GetOrderReply {
        *Order
    }
)

type (
    PutOrderRequest {
        OrderId int64 `path:"id"`
        Order
    }
    PutOrderReply {
        *Order
    }
)

type (
    PatchOrderRequest {
        OrderId int64 `path:"id"`
        Order
    }

    PatchOrderReply {
        *Order
    }
)

type (
    DeleteOrderRequest {
        OrderId int64 `path:"id"`
    }

    DeleteOrderReply {
        OrderId int64 `path:"id"`
    }
)
